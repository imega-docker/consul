branches:
  only:
    - master
language: ruby
services:
  - docker

before_install:
  - sudo mkdir -p /usr/local/share/ca-certificates/
  - wget https://entrust.com/root-certificates/entrust_l1k.cer
  - openssl x509 -in entrust_l1k.cer -out entrust_l1k.crt
  - sudo mv entrust_l1k.crt /usr/local/share/ca-certificates/
  - sudo update-ca-certificates
  - rm entrust_l1k.cer

env:
  global:
    - IMAGE=imega/consul
    - NV=`curl --silent "https://git.alpinelinux.org/aports/plain/community/consul/APKBUILD" | grep pkgver= | sed 's/pkgver=//g'`

stages:
  - Arch-Build
  - Manifest-Release

jobs:
  include:
    - stage: Arch-Build
      arch: amd64
      os: linux
      script:
        - RELEASE=0
        - docker pull $IMAGE:$NV-$TRAVIS_CPU_ARCH || RELEASE=1
        - make build IMAGE=$IMAGE TAG=$NV || exit 1
      after_success:
        - "[ ${RELEASE} == 1 ] && (make release DOCKER_USER=$DOCKER_USER DOCKER_PASS=$DOCKER_PASS IMAGE=$IMAGE TAG=$NV)"

    - stage: Arch-Build
      arch: ppc64le
      os: linux
      script:
        - RELEASE=0
        - docker pull $IMAGE:$NV-$TRAVIS_CPU_ARCH || RELEASE=1
        - make build IMAGE=$IMAGE TAG=$NV || exit 1
      after_success:
        - "[ ${RELEASE} == 1 ] && (make release DOCKER_USER=$DOCKER_USER DOCKER_PASS=$DOCKER_PASS IMAGE=$IMAGE TAG=$NV)"

    - stage: Arch-Build
      arch: arm64
      os: linux
      script:
        - RELEASE=0
        - docker pull $IMAGE:$NV-$TRAVIS_CPU_ARCH || RELEASE=1
        - make build IMAGE=$IMAGE TAG=$NV || exit 1
      after_success:
        - "[ ${RELEASE} == 1 ] && (make release DOCKER_USER=$DOCKER_USER DOCKER_PASS=$DOCKER_PASS IMAGE=$IMAGE TAG=$NV)"

    - stage: Manifest-Release
      arch: amd64
      os: linux
      script:
        - export DOCKER_CLI_EXPERIMENTAL=enabled
        - "make release-manifest DOCKER_USER=$DOCKER_USER DOCKER_PASS=$DOCKER_PASS IMAGE=$IMAGE TAG=$NV"
